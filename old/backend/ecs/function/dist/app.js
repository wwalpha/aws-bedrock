"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const body_parser_1 = require("body-parser");
const entry_1 = __importDefault(require("./entry"));
const predict_1 = __importDefault(require("./apis/predict"));
const predictTitle_1 = __importDefault(require("./apis/predictTitle"));
const generateImage_1 = __importDefault(require("./apis/generateImage"));
const deleteFile_1 = __importDefault(require("./apis/deleteFile"));
const getFileDownloadSignedUrl_1 = __importDefault(require("./apis/getFileDownloadSignedUrl"));
const getFileUploadSignedUrl_1 = __importDefault(require("./apis/getFileUploadSignedUrl"));
const getWebText_1 = __importDefault(require("./apis/getWebText"));
const app = (0, express_1.default)();
app.use((0, body_parser_1.urlencoded)({ extended: true }));
app.disable('x-powered-by');
app.options('*', (_, res) => res.sendStatus(200));
// health check
app.get('/health', (_, res) => res.send('backend'));
app.post('/predict', express_1.default.json(), (req, res) => (0, entry_1.default)(req, res, predict_1.default));
app.post('/predict/title', express_1.default.json(), (req, res) => (0, entry_1.default)(req, res, predictTitle_1.default));
app.post('/image/generate', express_1.default.json(), (req, res) => (0, entry_1.default)(req, res, generateImage_1.default));
app.delete('/file/:fileName', express_1.default.json(), (req, res) => (0, entry_1.default)(req, res, deleteFile_1.default));
app.get('/file/url', express_1.default.json(), (req, res) => (0, entry_1.default)(req, res, getFileDownloadSignedUrl_1.default));
app.post('/file/url', express_1.default.json(), (req, res) => (0, entry_1.default)(req, res, getFileUploadSignedUrl_1.default));
// app.get('/transcribe/result/:jobName', express.json(), (req, res) => entry(req, res, chatList));
// app.post('/transcribe/start', express.json(), (req, res) => entry(req, res, chatList));
// app.post('/transcribe/url', express.json(), (req, res) => entry(req, res, chatList));
app.get('/webtext', express_1.default.json(), (req, res) => (0, entry_1.default)(req, res, getWebText_1.default));
exports.default = app;
