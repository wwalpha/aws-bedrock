name: Frontend CI/CD

on:
  push:
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend.yml'
    branches: [master]
  pull_request:
    paths:
      - 'frontend/**'
  workflow_dispatch: {}

permissions:
  id-token: write
  contents: read

concurrency:
  group: frontend-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'frontend/package-lock.json'
      - name: Install deps
        run: npm ci
      - name: Lint
        run: npm run lint --silent
      - name: Type check
        run: npm run type-check --silent
      - name: Test
        run: npm test --silent
      - name: Build
        run: npm run build --silent
      - name: Export static site (if configured)
        id: export
        run: |
          npx --yes next export || echo 'next export skipped.'
          if [ -d out ]; then echo "has_out=true" >> $GITHUB_OUTPUT; fi
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build-${{ github.sha }}
          path: |
            frontend/.next/**
            frontend/out/**
          if-no-files-found: warn

  deploy:
    needs: build-test
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      FRONTEND_BUCKET: ${{ secrets.FRONTEND_BUCKET }}
      CF_DISTRIBUTION_ID: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}
    steps:
      - uses: actions/checkout@v4
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: frontend-build-${{ github.sha }}
          path: artifact
      - name: Sync to S3 (out/ preferred)
        shell: bash
        run: |
          if [ -z "$FRONTEND_BUCKET" ]; then echo 'FRONTEND_BUCKET not set, skipping deploy.'; exit 0; fi
          set -euo pipefail
          if [ -d artifact/frontend/out ]; then SRC=artifact/frontend/out; else SRC=artifact/frontend/.next/static; fi
          aws s3 sync "$SRC" "s3://$FRONTEND_BUCKET" --delete
      - name: Invalidate CloudFront (optional)
        if: env.CF_DISTRIBUTION_ID != ''
        run: aws cloudfront create-invalidation --distribution-id "$CF_DISTRIBUTION_ID" --paths '/*'
